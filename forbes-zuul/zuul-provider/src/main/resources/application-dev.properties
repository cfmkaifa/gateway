server.port=888
server.context-path=/
spring.application.name=api-geteway
spring.application.usercenter = usercenter
spring.application.usercenter.url = http://usercenter/
# 是否开启自我保护模式
eureka.server.enable-self-preservation = false
# 续期时间，即扫描失效服务的间隔时间（缺省为60*1000ms）
eureka.server.eviction-interval-timer-in-ms = 5000
 # 心跳时间，即服务续约间隔时间（缺省为30s）
eureka.instance.lease-renewal-interval-in-seconds = 5     
# 发呆时间，即服务续约到期时间（缺省为90s）
eureka.instance.lease-expiration-duration-in-seconds = 15 
# 对于同一个进程，既可以作为注册中心的服务端，也可以作为注册中心的客户端，在本例中，注册中心提供单一的注册服务功能，不提供其他接口服务能力，所以设置为false，最终不作为服务实例注册在注册中心中供其他服务调用。
eureka.client.register-with-eureka=true
#表示表示是否从EurekaServer获取注册信息，默认为true。单节点不需要同步其他的EurekaServer节点的数据
eureka.client.fetch-registry=true
# 拉取服务注册信息间隔（缺省为30s）
eureka.client.registry-fetch-interval-seconds = 10 
eureka.client.service-url.defaultZone=http://129.211.88.251:8080/eureka/
server.servlet.compression.enabled=true
server.servlet.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain,text/css,image/*
management.endpoints.web.exposure.include=metrics,httptrace
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.max-wait=-1ms
spring.redis.lettuce.pool.min-idle=0
spring.redis.lettuce.shutdown-timeout=100ms
spring.redis.password=
spring.redis.port=6379
###网关配置
ribbon.ReadTimeout=3000
ribbon.ConnectTimeout=3000
hystrix.command.default.execution.isolation.thread.timeout-in-milliseconds=3000
zuul.routes.usercenter-service.path = /usercenter/**
zuul.routes.usercenter-service.serviceId = usercenter
chase.path.upload=/opt/upFiles
chase.path.webapp=D://webapp
spring.resource.static-locations=classpath:/static/,classpath:/public/